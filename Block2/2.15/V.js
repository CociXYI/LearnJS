// Следующая функция возвращает true, если параметр age больше 18.

// В ином случае она запрашивает подтверждение через confirm и возвращает его результат:

// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   } else {
//     // ...
//     return confirm('Родители разрешили?');
//   }
// }
// Будет ли эта функция работать как-то иначе, если убрать else?

// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   }
//   // ...
//   return confirm('Родители разрешили?');
// }
// Есть ли хоть одно отличие в поведении этого варианта?

// решение:
// Оба варианта функций работают одинаково, отличий нет












function checkAge(age) {
    if (age > 18) {
      return true;
    } else {
      return confirm('Родители разрешили?');
    }
  }
//   Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
  
//   Сделайте два варианта функции checkAge:
  
//   Используя оператор ?
//   Используя оператор ||



//   решение:
//   оператор ?
  
  function checkAge(age) {
    return (age > 18) ? true : confirm('Родители разрешили?');
  }
//   оператор || 
  
  function checkAge(age) {
    return (age > 18) || confirm('Родители разрешили?');
  }




//   Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

//   Пример вызовов:
  
  min(2, 5) == 2
  min(3, -1) == -1
  min(1, 1) == 1
//   решение:  
  function min(a, b) {
    if (a < b) {
      return a;
    } else {
      return b;
    }
  }





//   Напишите функцию pow(x,n), которая возводит x в степень n и возвращает результат.

  pow(3, 2) = 3 * 3 = 9
  pow(3, 3) = 3 * 3 * 3 = 27
  pow(1, 100) = 1 * 1 * ...* 1 = 1




//   решение:

  function pow(x, n) {
    let result = x;
  
    for (let i = 1; i < n; i++) {
      result *= x;
    }
  
    return result;
  }
  
  let x = prompt("x?", '');
  let n = prompt("n?", '');
  
  if (n >= 1 && n % 1 == 0) {
    alert( pow(x, n) );
  } else {
    alert(`Степень ${n} не поддерживается`);
  }